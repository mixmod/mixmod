on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(pkgdir = "Rmixmod/", dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Create directory
        run: |
          mkdir -p Rmixmod_build/Rmixmod/
          cp -r Rmixmod/ Rmixmod_build/

      - name: Copy files
        working-directory: Rmixmod_build/Rmixmod
        run: |
          cp -r ../../mixmodLib/SRC/mixmod/* src/mixmod/
          cp -r ../../mixmodIOStream/SRC/mixmod_iostream/* src/mixmod_iostream/
          cp -r ../../mixmodIOStream/SRC/XML_specs inst/XML_specs

      - name: Generate configure script
        working-directory: Rmixmod_build/Rmixmod
        run: |
          autoreconf -fvi .
          rm -rf autom4te.cache
          rm -f aclocal.m4 tstmacos.ac
          rm -f config.*

      - name: Install dependencies
        working-directory: Rmixmod_build/Rmixmod
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Generate documentation
        working-directory: Rmixmod_build/Rmixmod
        run: |
          install.packages("roxygen2")
          roxygen2::roxygenize(".")
        shell: Rscript {0}

      - name: Check
        working-directory: Rmixmod_build/Rmixmod
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: Rmixmod_build/Rmixmod/check

